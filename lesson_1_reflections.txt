How did viewing a diff between two versions of a file help you see the
bug that was introduced?
By indicating that the lines were different, allowing me to scan the
lines to locate the difference.
How could having easy access to the entire history of a file make you a
more efficient programmer in the long term?
To facilitate debugging by providing a history of changes.
What do you think are the pros and cons of manually choosing when to
create a commit, like you do in Git, vs having versions automatically
saved, like Google docs does?
Pro - commits occur under your control;
Con - need to remember to commit.
Why do you think some version control systems, like Git, allow saving 
multiple files in one commit, while others, like Google Docs, treat 
each file separately?
The ones that support multiple-file changes are focused on supporting 
programmers.
How can you use the commands git log and git diff to view the history 
of files?
git log shows each commit, including its id and a brief explanation of
the reason for it. using the id of two commits, you can use git diff to
highlight the differences - lines added and lines deleted.
How might using version control make you more confident to make changes
that could break something?
Because it is easy enough to revert to a previous version to check if 
the bug was absent, and then use git diff to find what has changed.
Now that you have your workspace set up, what do you want to try using
Git for?
Not sure. Maybe for program assignments?