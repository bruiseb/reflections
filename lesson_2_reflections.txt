What happens when you initialize a repository? Why do you need to do it?
When you initialize a repository, git creates a .git hidden folder and
is ready to track the contents of that folder for a history of commits.
You need to do this so that git can work its magic on these files.
How can you use the staging area to make sure you have one commit per 
logical change?
Add files to the staging area when you have made the logical change, 
then commit them.
What are some situations when branches would be helpful in keeping your 
history organized? How would branches help?
Checking out an experimental new feature - try before you buy. Branches 
create a new environment for testing that leaves the existing code 
unchanged and revertible to.
How do the diagrams help you visualize the branch structure?
By abstracting the branch structure to a diagrammatic form.
What is the result of merging two branches together? Why do we 
represent it in the diagram the way we do?
Two branches are merged into one branch. Note that the currently 
checked out branch will be included in the merge, so make sure that you 
are checked out in one of the branches to be merged. It is represented 
in a way which suggests the branching and merging that has occurred.
What are the pros and cons of Gitâ€™s automatic merging vs. always doing 
merges manually?
Pro - When no conflicts exist, merging can be straightforward.
Con - Conficts must be resolved manually.